name: CI/CD Collectionlink

on:
  push:
    branches:
      - main  

jobs:
  symfony:
    name: 🧪 Test Collectionlink
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: collectionLink_api  

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: collectionlink_test
          MYSQL_USER: collectionlink
          MYSQL_PASSWORD: 1!Testmotdepasse
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Install PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, pdo_mysql, intl
          coverage: none
      
      - name: 📄 Create .env file
        run: |
          touch .env
          echo "APP_ENV=test" >> .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "DATABASE_URL=mysql://collectionlink:1!Testmotdepasse@127.0.0.1:3306/collectionlink_test?serverVersion=8.0" >> .env
          echo "JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem" >> .env
          echo "JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem" >> .env
          echo "JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}" >> .env

      - name: ✅ Validate composer.json and composer.lock
        run: composer validate

      - name: ✅ Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: collectionLink_api/vendor 
          key: ${{ runner.os }}-php-${{ hashFiles('collectionLink_api/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: 📦 Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: 📦 Create JWT directory
        run: mkdir -p config/jwt

      - name: 🔑 Generate SSL Key for JWT
        run: php bin/console lexik:jwt:generate-keypair

      # - name: 🛠️ Create database schema
      #   run: php bin/console doctrine:schema:create --env=test

      # - name: Migrate database 
      #   run: php bin/console d:m:m --no-interaction --env=test

      # - name: ✅ PHPUnit tests
      #   run: php bin/phpunit --coverage-text

  deploy:
    name: 🚀 Deploy Collectionlink 
    runs-on: ubuntu-latest
    needs: symfony
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🔑 Connect to server and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          # password: ${{ secrets.SERVER_PASSWORD }}
          debug: true 
          script: |
            cd /var/www/collectionlink  
            git fetch --all
            git reset --hard origin/main
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php bin/console doctrine:migrations:migrate --no-interaction
            php bin/console cache:clear
            chmod -R 777 var/
            sudo systemctl restart apache2